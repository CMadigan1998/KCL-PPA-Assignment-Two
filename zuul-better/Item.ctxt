#BlueJ class context
comment0.target=Item
comment0.text=\n\ This\ classe\ contains\ the\ values\ that\ will\ be\ sued\ to\ describe\ an\ item.\n\ To\ create\ an\ item\ you\ \ call\ the\ constructor\ and\ pass\ its\ name,\ type,\ wether\ the\ player\ can\ hold\ it\ or\ not,\n\ welther\ the\ item\ contains\ its\ own\ seperate\ inventory\ and\ the\ items\ weight.\n\n\ @author\ Charlie\ Madigan\ (K19019003)\n\ @version\ 201119\n
comment1.params=name\ type\ playerCanHold\ containsInventory\ itemWeight
comment1.target=Item(java.lang.String,\ java.lang.String,\ boolean,\ boolean,\ int)
comment2.params=
comment2.target=int\ getItemValue()
comment2.text=\n\ This\ method\ simply\ returns\ the\ value\ stored\ in\ the\ varibale\ value.\n
comment3.params=
comment3.target=int\ getItemWeight()
comment3.text=\n\ this\ method\ simply\ returns\ the\ value\ store\ in\ the\ items\ weight\ varibale\n
comment4.params=
comment4.target=java.lang.String\ getItemName()
comment4.text=\n\ This\ method\ allows\ other\ classes\ to\ read\ the\ name\ of\ the\ item\n
comment5.params=item
comment5.target=void\ addItemToInventory(Item)
comment5.text=\n\ this\ method\ takes\ an\ Item\ object\ as\ a\ parameter\n\ This\ method\ takes\ the\ parameter\ and\ adds\ it\ to\ the\ internal\ inventory\n
comment6.params=name
comment6.target=Item\ removeItem(java.lang.String)
comment6.text=\n\ this\ method\ take\ a\ string\ as\ a\ parameter\n\ This\ method\ takes\ the\ items\ name\ as\ a\ parameter,\ then\ looks\ for\ it\ within\ the\ inventory,\ if\ it\ exists\n\ the\ method\ removes\ it\ from\ the\ hashmap\n
comment7.params=
comment7.target=void\ displayInventory()
comment7.text=\n\ This\ item\ goes\ through\ the\ hashmap\ of\ the\ inventory\ and\ displayes\ the\ name\ of\ each\ of\ the\ items\ within\n\ to\ allow\ the\ player\ to\ see\ whats\ inside\ the\ inventory.\n
numComments=8
